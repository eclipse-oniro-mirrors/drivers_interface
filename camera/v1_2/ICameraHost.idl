/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @file icamera_host.h
 *
 * @brief Management class of the camera service that provides Hardware Driver Interfaces (HDIs) for the upper layer.
 *
 * @since 4.1
 * @version 1.2
 */

package ohos.hdi.camera.v1_2;

import ohos.hdi.camera.v1_1.ICameraHost;
import ohos.hdi.camera.v1_1.ICameraDevice;
import ohos.hdi.camera.v1_2.ICameraHostCallback;

interface ICameraHost extends ohos.hdi.camera.v1_1.ICameraHost {
    /**
     * @brief Notify the device vendor of the device status change.
     *
     * By calling this function, you can notify the device vendor of the device status change.
     *
     * @param notifyType Indicates the type of the notify.
     * @param deviceState Indicates the state of the device.
     *
     * @return Returns <b>NO_ERROR</b> if the operation is successful; returns an error code defined
     * in {@link CamRetCode} otherwise.
     *
     * @since 4.1
     * @version 1.2
     */
    NotifyDeviceStateChangeInfo([in] int notifyType, [in] int deviceState);

    /**
     * @brief Sets callbacks. For details about the callbacks, see {@link ICameraHostCallback}.
     *
     * @param callback Indicates the callbacks to set.
     *
     * @return Returns <b>NO_ERROR</b> if the operation is successful; returns an error code defined
     * in {@link CamRetCode} otherwise.
     *
     * @since 4.1
     * @version 1.2
     */
    SetCallbackV1_2([in] ICameraHostCallback callbackObj);

    /**
     * @brief Turns on or off the flash.
     *
     * This function can be used only by the caller who has opened the camera device.
     *
     * @param level Specifies whether to turn on or off the flash. The value 1 means to turn on the flash,
     * and 0 means the opposite.
     *
     * @return Returns <b>NO_ERROR</b> if the operation is successful; returns an error code defined
     * in {@link CamRetCode} otherwise.
     *
     * @since 4.1
     * @version 1.2
     */
    SetFlashlightV1_2([in] float level);
}
