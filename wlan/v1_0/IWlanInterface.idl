/*
 * Copyright (c) 2022 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ohos.hdi.wlan.v1_0;

import ohos.hdi.wlan.v1_0.WlanTypes;
import ohos.hdi.wlan.v1_0.IWlanCallback;

interface IWlanInterface {
    Start();
    Stop();
    CreateFeature([in] int type, [out] struct HdfFeatureInfo ifeature);
    DestroyFeature([in] struct HdfFeatureInfo ifeature);
    GetAsscociatedStas([in] struct HdfFeatureInfo ifeature, [out] struct HdfStaInfo[] staInfo, [out] unsigned int num);
    GetChipId([in] struct HdfFeatureInfo ifeature, [out] unsigned char chipId);
    GetDeviceMacAddress([in] struct HdfFeatureInfo ifeature, [out] unsigned char[] mac, [in] unsigned char len);
    GetFeatureByIfName([in] String ifName, [out] struct HdfFeatureInfo ifeature);
    GetFeatureType([in] struct HdfFeatureInfo ifeature, [out] int featureType);
    GetFreqsWithBand([in] struct HdfFeatureInfo ifeature, [in] struct HdfWifiInfo wifiInfo, [out] int[] freq);
    GetIfNamesByChipId([in] unsigned char chipId, [out] String ifName, [out] unsigned int num);
    GetNetworkIfaceName([in] struct HdfFeatureInfo ifeature, [out] String ifName);
    GetSupportCombo([out] unsigned long combo);
    GetSupportFeature([out] unsigned char[] supType);
    RegisterEventCallback([in] IWlanCallback cbFunc, [in] String ifName);
    UnregisterEventCallback([in] IWlanCallback cbFunc, [in] String ifName);
    ResetDriver([in] unsigned char chipId, [in] String ifName);
    SetCountryCode([in] struct HdfFeatureInfo ifeature, [in] String code, [in] unsigned int len);
    SetMacAddress([in] struct HdfFeatureInfo ifeature, [in] unsigned char[] mac);
    SetScanningMacAddress([in] struct HdfFeatureInfo ifeature, [in] unsigned char[] scanMac);
    SetTxPower([in] struct HdfFeatureInfo ifeature, [in] int power);
    GetNetDevInfo([out] struct HdfNetDeviceInfoResult netDeviceInfoResult);
    StartScan([in] struct HdfFeatureInfo ifeature, [in] struct HdfWifiScan scan);
    GetPowerMode([in] struct HdfFeatureInfo ifeature, [out] unsigned char mode);
    SetPowerMode([in] struct HdfFeatureInfo ifeature, [in] unsigned char mode);
    [oneway] StartChannelMeas([in] String ifName, [in] struct MeasChannelParam measChannelParam);
    GetChannelMeasResult([in] String ifName, [out] struct MeasChannelResult measChannelResult);
    SetProjectionScreenParam([in] String ifName, [in] struct ProjectionScreenCmdParam param);
}
