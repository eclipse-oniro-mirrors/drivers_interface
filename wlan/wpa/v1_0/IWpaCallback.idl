/*
 * Copyright (c) 2023 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @addtogroup Wpa
 * @{
 *
 * @brief Defines APIs for the upper-layer WLAN service.
 *
 * You can use the APIs to enable or disable a WLAN hotspot, scan for hotspots, connect to a WLAN hotspot,
 * manage WLAN chips, network devices, and power, and apply for, release, and move network data buffers.
 *
 * @since 3.2
 * @version 1.0
 */

/**
 * @file IWpaCallback.idl
 *
 * @brief Provides callbacks to be invoked when the wpa supplicant is restarted, the scan result is returned,
 * and a Netlink message is received.
 *
 * @since 3.2
 * @version 1.0
 */

/**
 * @brief Defines the package path of the WLAN module interface.
 *
 * @since 3.2
 * @version 1.0
 */
package ohos.hdi.wlan.wpa.v1_0;

import ohos.hdi.wlan.wpa.v1_0.WpaTypes;

/**
 * @brief Defines the callbacks of the Wpa module.
 *
 * The callback is invoked to continue the subsequent processing when the wpa supplicant restarts, hotspot scan ends,
 * or a Netlink message is received.
 *
 * @since 4.1
 * @version 1.0
 */
[callback] interface IWpaCallback {
    /**
     * Used to indicate the disconnection from the currently connected
     * network on this iface.
     *
     * @param disconnectParam  Indicates the paramerter of Disconnect
     * @param ifName Indicates the NIC name.
     *
     * @since 4.1
     * @version 1.0
     */
   OnEventDisconnected([in] struct HdiWpaDisconnectParam disconnectParam, [in] String ifName);

    /**
     * Used to indicate the Connection from the currently connected
     * network on this iface.
     *
     * @param disconnectParam  Indicates the paramerter of Connect
     * @param ifName Indicates the NIC name.
     *
     * @since 4.1
     * @version 1.0
     */
   OnEventConnected([in] struct HdiWpaConnectParam connectParam, [in] String ifName);

    /**
     * Used to indicate the BssidChanged from the currently BssidChanged
     * network on this iface.
     *
     * @param disconnectParam  Indicates the paramerter of BssidChanged
     * @param ifName Indicates the NIC name.
     *
     * @since 4.1
     * @version 1.0
     */
    OnEventBssidChanged([in] struct HdiWpaBssidChangedParam bssidChangedParam, [in] String ifName);

    /**
     * Used to indicate the  Wpa State Changed from the currently State Changed
     * network on this iface.
     *
     * @param disconnectParam  Indicates the paramerter of BssidChanged
     * @param ifName Indicates the NIC name.
     *
     * @since 4.1
     * @version 1.0
     */
   OnEventStateChanged([in] struct HdiWpaStateChangedParam statechangedParam, [in] String ifName);

    /**
     * Used to indicate the TempDisabled from the currently wifi TempDisabled
     * network on this iface.
     *
     * @param disconnectParam  Indicates the paramerter of TempDisabled
     * @param ifName Indicates the NIC name.
     *
     * @since 4.1
     * @version 1.0
     */
   OnEventTempDisabled([in] struct HdiWpaTempDisabledParam tempDisabledParam, [in] String ifName);

    /**
     * Used to indicate the AssociateReject from the currently wifi AssociateReject
     * network on this iface.
     *
     * @param disconnectParam  Indicates the paramerter of AssociateReject
     * @param ifName Indicates the NIC name.
     *
     * @since 4.1
     * @version 1.0
     */
    OnEventAssociateReject([in] struct HdiWpaAssociateRejectParam associateRejectParam, [in] String ifName);

    /**
     * Used to indicate the overlap of a WPS PBC connection attempt from the currently wifi
     * network on this iface.
     *
     * @param ifName Indicates the NIC name.
     *
     * @since 4.1
     * @version 1.0
     */
    OnEventWpsOverlap([in] String ifName);

    /**
     * Used to indicate the timeout of a PBC connection attempt from the currently wifi
     * network on this iface.
     *
     * @param ifName Indicates the NIC name.
     *
     * @since 4.1
     * @version 1.0
     */
    OnEventWpsTimeout([in] String ifName);

    /**
     * Used to indicate the timeout of a PBC connection attempt from the currently wifi
     * network on this iface.
     *
     * @param ifName Indicates the NIC name.
     *
     * @since 4.1
     * @version 1.0
     */
    OnEventScanResult([in] HdiWpaRecvScanResultParam recvScanResultParam, [in] String ifName);
}