/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @addtogroup power
 * @{
 *
 * @brief Provides APIs for performing suspend/wakeup operations, subscribing to the suspend/wakeup state,
 * and managing running locks.
 * 
 * After obtaining an object or proxy of this module, the power service can invoke related APIs to perform
 * suspend/wakeup operations, subscribe to the suspend/wakeup state, and manage running locks.
 *
 * @since 3.1
 * @version 1.1
 */

/**
 * @file IPowerInterface.idl
 *
 * @brief Provides APIs for performing suspend/wakeup operations, subscribing to the suspend/wakeup state,
 * and managing running locks.
 *
 * 
 *
 * @since 3.1
 * @version 1.1
 */

package ohos.hdi.power.v1_3;

import ohos.hdi.power.v1_2.IPowerInterface;
import ohos.hdi.power.v1_3.IPowerHdiCallbackExt;

/**
 * @brief Represents APIs for performing suspend/wakeup operations, subscribing to the suspend/wakeup state,
 * and managing running locks.
 *
 * 
 *
 * @since 3.1
 * @version 1.1
 */
interface IPowerInterface extends ohos.hdi.power.v1_2.IPowerInterface {
    /**
     * @brief Registers the power callback of the suspend/wakeup state with a tag.
     *
     * @param ipowerHdiCallback Callback to register.
     *
     * @return Returns <b>HDF_SUCCESS</b> if the operation is successful.
     * @see IPowerHdiCallbackExt
     *
     * @since 6.0
     * @version 1.0
     */
    RegisterPowerCallbackExt([in] IPowerHdiCallbackExt ipowerHdiCallback);

    /**
     * @brief Unregisters the power callback of the suspend/wakeup state with a tag.
     *
     * @param ipowerHdiCallback Callback to unregister.
     *
     * @return Returns <b>HDF_SUCCESS</b> if the operation is successful.
     * @see IPowerHdiCallbackExt
     *
     * @since 6.0
     * @version 1.0
     */
    UnRegisterPowerCallbackExt([in] IPowerHdiCallbackExt ipowerHdiCallback);
}
/** @} */