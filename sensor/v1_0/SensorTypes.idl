/*
 * Copyright (c) 2021 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @addtogroup HdiSensor
 * @{
 *
 * @brief Provides unified APIs for sensor services to access sensor drivers.
 *
 * A sensor service can obtain a sensor driver object or agent and then call APIs provided by this object or agent to
 * access different types of sensor devices based on the sensor IDs, thereby obtaining sensor information,
 * subscribing to or unsubscribing from sensor data, enabling or disabling a sensor,
 * setting the sensor data reporting mode, and setting sensor options such as the accuracy and measurement range.
 *
 * @version 1.0
 */

/**
 * @file SensorTypes.idl
 *
 * @brief Defines the data used by the sensor module, including the sensor information,
 * and reported sensor data.
 *
 * @since 2.2
 * @version 1.0
 */

package ohos.hdi.sensor.v1_0;

/**
 * @brief Defines basic sensor information.
 *
 * Information about a sensor includes the sensor name, vendor, firmware version, hardware version, sensor type ID,
 * sensor ID, maximum measurement range, accuracy, and power.
 *
 * @since 2.2
 */
struct HdfSensorInformation {
    String sensorName; /**< Sensor name */
    String vendorName; /**< Sensor vendor */
    String firmwareVersion; /**< Sensor firmware version */
    String hardwareVersion; /**< Sensor hardware version */
    int sensorTypeId; /**< Sensor type ID (described in {@link SensorTypeTag}) */
    int sensorId;     /**< Sensor ID, defined by the sensor driver developer */
    float maxRange;   /**< Maximum measurement range of the sensor */
    float accuracy;   /**< Sensor accuracy */
    float power;      /**< Sensor power */
};

/**
 * @brief Defines the data reported by the sensor.
 *
 * The reported sensor data includes the sensor ID, sensor algorithm version, data generation time,
 * data options (such as the measurement range and accuracy), data reporting mode, data address, and data length.
 *
 * @since 2.2
 */
struct HdfSensorEvents {
    int sensorId;            /**< Sensor ID */
    int version;             /**< Sensor algorithm version */
    long timestamp;           /**< Time when sensor data was generated */
    unsigned int option;     /**< Sensor data options, including the measurement range and accuracy */
    int mode;                /**< Sensor data reporting mode */
    unsigned char[] data;    /**< Sensor data vector */
    unsigned int dataLen;    /**< Sensor data length */
};
